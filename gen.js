const fs = require('fs')

const NUM_RANKS = 8
const LAST_RANK = NUM_RANKS - 1
const NUM_FILES = 8
const LAST_FILE = NUM_FILES - 1

const rankLetters = ["1", "2", "3", "4", "5", "6", "7", "8"]
const fileLetters = ["a", "b", "c", "d", "e", "f", "g", "h"]

let sqs = []

for(let rank=0; rank<NUM_RANKS; rank++) for(let file=0; file<NUM_FILES; file++) sqs.push(
    `  Square${fileLetters[file].toUpperCase()}${rankLetters[rank]} = Square(${rank*NUM_RANKS+file})`
)

let ranks = []

for(let rank=0; rank<NUM_RANKS; rank++) ranks.push(
    `  Rank${rankLetters[rank]} = Rank(${rank})`
)

let files = []

for(let file=0; file<NUM_FILES; file++) files.push(
    `  File${fileLetters[file].toUpperCase()} = File(${file})`
)

const square_go = `package basic

// generated by gen.js, don't edit

const NUM_RANKS = ${NUM_RANKS}
const NUM_FILES = ${NUM_RANKS}

const BOARD_AREA = NUM_RANKS * NUM_FILES

const RANK_STORAGE_SIZE_IN_BITS = 3
const FILE_STORAGE_SIZE_IN_BITS = 3
const SQUARE_STORAGE_SIZE_IN_BITS = RANK_STORAGE_SIZE_IN_BITS + FILE_STORAGE_SIZE_IN_BITS
const RANK_SHIFT_IN_BITS = FILE_STORAGE_SIZE_IN_BITS

const FILE_MASK = (NUM_FILES - 1)
const RANK_MASK = (NUM_RANKS - 1) << RANK_SHIFT_IN_BITS

type Rank int
type File int
type Square int

const (
${sqs.join("\n")}
)

const (
${ranks.join("\n")}
)

const (
${files.join("\n")}
)

var RankLetterOf = [NUM_RANKS]string{${rankLetters.map(rl => `"${rl}"`).join(' , ')}}
var FileLetterOf = [NUM_FILES]string{${fileLetters.map(rl => `"${rl}"`).join(' , ')}}

var UCIOf [BOARD_AREA]string
var UCIToSquare map[string]Square
`

fs.writeFileSync("basic/square.go", square_go)